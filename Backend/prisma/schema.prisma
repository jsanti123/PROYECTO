// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id
  name        String   @db.VarChar(255)
  description String?   @db.VarChar(255)
  category_id String
  supplier_id String
  price       Decimal  @db.Decimal(10, 2)
  image       Bytes?    @db.ByteA
  stock       Int
  deleted     Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt @default(now())

  category            Category @relation(fields: [category_id], references: [id])
  supplier            Supplier @relation(fields: [supplier_id], references: [id])
  inventoryMovements  InventoryMovements[]
  stockHistory        StockHistory[]
  stockByWarehouse    StockByWarehouse[]
}

model Category {
  id          String    @id
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt @default(now())

  products    Product[]
}

model Supplier {
  id          String     @id
  name        String     @db.VarChar(255)
  phone       String?    @db.VarChar(255)
  email       String?    @db.VarChar(255) @unique
  adress      String?    @db.VarChar(255)
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt @default(now())

  products Product[]
}

model Warehouse {
  id          String   @id
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt @default(now())

  inventoryMovements  InventoryMovements[]
  stockHistory        StockHistory[]
  stockByWarehouse    StockByWarehouse[]
}

model InventoryMovements {
  id            Int       @id @default(autoincrement())
  product_id    String    
  warehouse_id  String
  movement_type MovementType
  quantity      Int
  movement_date DateTime  @default(now())
  description   String?   @db.VarChar(255)

  product       Product   @relation(fields: [product_id], references: [id])
  warehouse     Warehouse @relation(fields: [warehouse_id], references: [id])
}

model StockHistory {
  id              Int       @id @default(autoincrement())
  product_id      String
  warehouse_id    String
  previous_stock  Int
  new_stock       Int
  change_date     DateTime  @default(now())

  product         Product   @relation(fields: [product_id], references: [id])
  warehouse       Warehouse @relation(fields: [warehouse_id], references: [id])
}

model StockByWarehouse {
  product_id  String
  warehouse_id String
  stock       Int
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt @default(now())

  product     Product   @relation(fields: [product_id], references: [id])
  warehouse   Warehouse @relation(fields: [warehouse_id], references: [id])

  @@id ([product_id, warehouse_id])
}

enum MovementType {
  ENTRADA
  SALIDA
}